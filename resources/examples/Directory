basic_ip_locator.py:
A Python script that demonstrates how to obtain approximate location information from an IP address using a free geolocation API (e.g., ip-api.com).
Important: Emphasize that this provides a general location and not precise real-time tracking.
Python

# basic_ip_locator.py
import requests

def get_location(ip_address):
  """Gets approximate location data from an IP address."""
  try:
    response = requests.get(f"http://ip-api.com/json/{ip_address}")
    data = response.json()
    print(f"Country: {data.get('country')}")
    print(f"Region: {data.get('regionName')}")
    print(f"City: {data.get('city')}")
    # ... (extract other relevant information)
  except requests.exceptions.RequestException as e:
    print(f"Error getting location: {e}")

# Example usage
ip_address = "8.8.8.8"  # Google's public DNS server
get_location(ip_address) 
link-location-demo.html:
A simple HTML page that shows how JavaScript can be used to request location permission from a user's browser.
Crucial: Clearly explain the privacy implications and how users can control location sharing in their browser settings.
HTML

<!DOCTYPE html>
<html>
<head>
  <title>Location Demo</title>
</head>
<body>
  <p>Your location:</p>
  <div id="location-info"></div>

  <script>
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(showPosition);
    } else {
      document.getElementById("location-info").innerHTML = "Geolocation is not supported by this browser.";
    }

    function showPosition(position) {
      document.getElementById("location-info").innerHTML = "Latitude: " + position.coords.latitude + 
      "<br>Longitude: " + position.coords.longitude;
    }
  </script>
</body>
</html>
